version: 2.1

jobs:
  ubuntu24-full-dev:
    docker:
      - image: ubuntu:24.04
    environment:
      DEBIAN_FRONTEND: noninteractive

    steps:
      - checkout

      - run:
          name: üîÅ Ganti Mirror APT (Fix 403 Forbidden)
          command: |
            sed -i 's|http://archive.ubuntu.com/ubuntu|http://mirror.kku.ac.th/ubuntu|g' /etc/apt/sources.list
            sed -i 's|http://security.ubuntu.com/ubuntu|http://mirror.kku.ac.th/ubuntu|g' /etc/apt/sources.list
            apt-get update || true

      - run:
          name: ‚ú® Set Metadata & Env
          command: |
            DATE=$(date +%Y-%m-%d)
            echo "export TAR_NAME=ubuntu24-full-dev-$DATE.tar.gz" >> $BASH_ENV
            echo "export RELEASE_NAME='Ubuntu 24.04 Full Dev Snapshot - $DATE'" >> $BASH_ENV
            echo "export TAG_NAME=v24.04-full-$DATE" >> $BASH_ENV

      - run:
          name: üåç Set Timezone Asia/Makassar
          command: |
            echo "Asia/Makassar" > /etc/timezone
            ln -sf /usr/share/zoneinfo/Asia/Makassar /etc/localtime
            dpkg-reconfigure -f noninteractive tzdata || true
            date

      - run:
          name: üîÑ Update dan Upgrade
          command: apt-get update && apt-get upgrade -y

      - run:
          name: üß∞ Install CLI Tools
          command: |
            apt-get install -y \
              git curl wget unzip zip build-essential \
              make cmake gcc g++ zsh jq htop tree \
              net-tools file gnupg tzdata neovim tmux \
              sudo software-properties-common openssh-client python3-pytest

      - run:
          name: üìö Install Language Runtimes
          command: |
            apt-get install -y \
              python3 python3-pip python3-venv \
              golang-go openjdk-21-jdk ruby-full default-jdk \
              --fix-missing

      - run:
          name: üåê Install Node.js via NodeSource
          command: |
            curl -fsSL https://deb.nodesource.com/setup_20.x | bash -
            apt-get install -y nodejs

      - run:
          name: üåê Install Web Stack
          command: |
            apt-get install -y \
              nginx mariadb-server redis-server \
              postgresql php php-cli php-fpm \
              sqlite3 --fix-missing

      - run:
          name: üê≥ Install Docker + Compose
          command: |
            apt-get install -y ca-certificates curl gnupg lsb-release
            install -m 0755 -d /etc/apt/keyrings
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | \
              gpg --dearmor -o /etc/apt/keyrings/docker.gpg
            echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
              $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
            apt-get update
            apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

      - run:
          name: üîê Install Security Tools
          command: |
            apt-get install -y ufw fail2ban nmap sslscan lynis whois

      - run:
          name: ü§ñ Install Python AI/ML
          command: |
            pip3 install --break-system-packages \
              numpy pandas matplotlib scikit-learn \
              jupyter seaborn opencv-python \
              transformers torch torchvision

      - run:
          name: üß™ Dummy Test Run
          command: |
            mkdir -p test-results
            echo 'def test_pass(): assert 1 + 1 == 2' > test_sample.py
            pytest test_sample.py --junitxml=test-results/results.xml || true

      - store_test_results:
          path: test-results

      - run:
          name: üßæ Setup Configs + Dummy File
          command: |
            mkdir -p ~/.config/nvim ~/.config/tmux ~/dummy
            echo "set number" > ~/.config/nvim/init.vim
            echo "set -g mouse on" > ~/.config/tmux/tmux.conf
            echo "alias ll='ls -la'" > ~/.zshrc
            dd if=/dev/zero of=~/dummy/filler.bin bs=1M count=800 || true

      - run:
          name: üì¶ Compress Snapshot
          command: |
            mkdir -p full-dev-snapshot
            cp -r ~/.config full-dev-snapshot/config || true
            cp ~/.zshrc full-dev-snapshot/zshrc || true
            cp -r ~/dummy full-dev-snapshot/dummy || true
            echo "$RELEASE_NAME" > full-dev-snapshot/README.txt
            tar -czf "$TAR_NAME" full-dev-snapshot
            ln -sf "$TAR_NAME" ubuntu24-latest.tar.gz

      - run:
          name: üìè Check File Size
          command: |
            ls -lh ubuntu24-latest.tar.gz
            du -h ubuntu24-latest.tar.gz

      - store_artifacts:
          path: ubuntu24-latest.tar.gz
          destination: full-dev-snapshot

      - run:
          name: üöÄ Upload to GitHub Release
          command: |
            apt-get install -y curl jq git
            DATE=$(date +%Y-%m-%d)
            TAG="v24.04-full-$DATE"
            FILE="ubuntu24-full-dev-$DATE.tar.gz"
            RELEASE_NAME="Ubuntu 24.04 Snapshot - $DATE"
            BODY="‚úÖ Full Dev Environment for Ubuntu 24.04\nüì¶ Built on $DATE via CircleCI"

            git config --global user.email "ci@circleci"
            git config --global user.name "circleci-bot"
            git tag "$TAG" || true
            git push "https://${GH_TOKEN}@github.com/iyanldn/Ubuntu-V24.04.git" "$TAG"

            curl -s -X POST \
              -H "Authorization: token ${GH_TOKEN}" \
              -H "Content-Type: application/json" \
              -d "{\"tag_name\":\"$TAG\", \"name\":\"$RELEASE_NAME\", \"body\":\"$BODY\", \"draft\":false, \"prerelease\":false}" \
              https://api.github.com/repos/iyanldn/Ubuntu-V24.04/releases || true

            RELEASE_ID=$(curl -s -H "Authorization: token ${GH_TOKEN}" \
              https://api.github.com/repos/iyanldn/Ubuntu-V24.04/releases/tags/$TAG | jq -r .id)

            curl -s -X POST \
              -H "Authorization: token ${GH_TOKEN}" \
              -H "Content-Type: application/gzip" \
              --data-binary @"$FILE" \
              "https://uploads.github.com/repos/iyanldn/Ubuntu-V24.04/releases/$RELEASE_ID/assets?name=$FILE"

workflows:
  version: 2
  full_build:
    jobs:
      - ubuntu24-full-dev
