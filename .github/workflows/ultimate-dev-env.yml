name: Ultimate Dev Environment - Ubuntu 24.04 FULL

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  ultimate-dev-setup:
    runs-on: ubuntu-24.04
    timeout-minutes: 35

    steps:
      - name: ‚úÖ Checkout Repo
        uses: actions/checkout@v4

      - name: üìÖ Set Tanggal untuk TAG & FILE
        run: |
          DATE=$(date +%Y-%m-%d)
          echo "TAR_NAME=ubuntu24-dev-env-lite-$DATE.tar.gz" >> $GITHUB_ENV
          echo "RELEASE_NAME=Ubuntu 24.04 Dev Snapshot - $DATE" >> $GITHUB_ENV
          echo "TAG_NAME=v24.04-lite-$DATE" >> $GITHUB_ENV

      - name: üîß Generate Dummy Config Files (wajib)
        run: |
          mkdir -p ~/.config/nvim
          echo "\" Auto-generated nvim config" > ~/.config/nvim/init.vim
          echo "set number" >> ~/.config/nvim/init.vim

          mkdir -p ~/.config/tmux
          echo "# Auto tmux config" > ~/.config/tmux/tmux.conf

          echo "# Auto-generated .zshrc" > ~/.zshrc
          echo "alias ll='ls -la'" >> ~/.zshrc

      - name: üîç Debug:Cek isi sebelum backup
        run: |
          echo "--- ~/.config/nvim ---"
          ls -la ~/.config/nvim || echo "‚ùå nvim config not found"
          echo "--- ~/.zshrc ---"
          cat ~/.zshrc || echo "‚ùå .zshrc not found"

      - name: üóúÔ∏è Compress Dev Snapshot (Lite Mode)
        run: |
          mkdir -p dev-env-snapshot
          cp -r ~/.config/nvim dev-env-snapshot/config-nvim || true
          cp -r ~/.config/tmux dev-env-snapshot/config-tmux || true
          cp -r ~/.zshrc dev-env-snapshot/zshrc || true
          echo "Ubuntu 24.04 Full Dev Snapshot (Lite Mode)" > dev-env-snapshot/README.txt
          tar -czf "$TAR_NAME" dev-env-snapshot

      - name: ‚òÅÔ∏è Upload Artifact to GitHub
        uses: actions/upload-artifact@v4
        with:
          name: ubuntu24-dev-env-lite
          path: ${{ env.TAR_NAME }}

      - name: üöÄ Upload to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.TAG_NAME }}
          files: ${{ env.TAR_NAME }}
          generate_release_notes: true
          draft: false
          prerelease: false
          name: ${{ env.RELEASE_NAME }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
