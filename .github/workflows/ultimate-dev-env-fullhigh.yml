name: Ultimate Dev Environment - Ubuntu 24.04 FULL

on:
  workflow_dispatch:
  push:
    tags:
      - 'v24.04-arm64'

permissions:
  contents: write

jobs:
  ultimate-dev-setup:
    runs-on: ubuntu-24.04
    timeout-minutes: 35

    steps:
      - name: ✅ Checkout Repo
        uses: actions/checkout@v4

      - name: 🔄 Update & Upgrade
        run: |
          sudo apt-get update && sudo apt-get upgrade -y

      - name: 🛠️ Install CLI + Build Tools
        run: |
          sudo apt-get install -y \
            git curl wget unzip zip neovim tmux build-essential \
            make cmake gcc g++ zsh jq htop tree net-tools file gnupg

      - name: 🔣 Install Language Runtimes
        run: |
          sudo apt-get install -y \
            python3 python3-pip python3-venv nodejs npm golang-go openjdk-21-jdk default-jdk

      - name: 🌐 Install Web Stack
        run: |
          sudo apt-get install -y \
            nginx mariadb-server redis-server postgresql

      - name: 🐳 Install Docker & Compose (via Docker repo)
        run: |
          sudo apt-get update
          sudo apt-get install -y ca-certificates curl gnupg
          sudo install -m 0755 -d /etc/apt/keyrings
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
          echo \
            "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
            $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
            sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

          sudo apt-get update
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
          sudo systemctl enable docker
          sudo systemctl start docker || true

      - name: 📦 Install Python AI/ML Libraries
        run: |
          pip install --upgrade pip
          pip install \
            numpy pandas matplotlib scikit-learn \
            jupyter seaborn opencv-python \
            transformers torch torchvision

      - name: 🛡️ Install Security Tools
        run: |
          sudo apt-get install -y \
            ufw nmap netcat-traditional openssh-client fail2ban lynis whois dnsutils

      - name: 🔐 Enable UFW Firewall
        run: |
          sudo ufw allow OpenSSH
          sudo ufw allow 80
          sudo ufw allow 443
          sudo ufw --force enable

      - name: 📋 Show Installed Versions
        run: |
          echo "--- INSTALLED VERSIONS ---"
          git --version
          node -v
          npm -v
          python3 --version
          go version
          java -version
          docker --version
          docker compose version
          nginx -v
          mariadb --version
          redis-server --version
          psql --version
          nmap --version | head -n 1

      - name: 🗜️ Compress Safe Dev Snapshot (Only User Environment)
        run: |
          mkdir -p dev-snapshot
          cp -r ~/.config dev-snapshot/config || true
          cp -r ~/.local dev-snapshot/local || true
          cp -r ~/.npm dev-snapshot/npm || true
          cp -r ~/.cache dev-snapshot/cache || true
          tar -czf ubuntu24-dev-env-lite.tar.gz dev-snapshot

      - name: ☁️ Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ubuntu24-dev-env-lite
          path: ubuntu24-dev-env-lite.tar.gz

      - name: 🚀 Upload to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v24.04-arm64
          files: ubuntu24-dev-env-lite.tar.gz
          generate_release_notes: true
          draft: false
          prerelease: false
          name: Ubuntu 24.04 Full Dev Snapshot (User Env Only)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
